secrets = [
    "S3_BUCKET=codesink-cache",
    "S3_ENDPOINT=sfo2.digitaloceanspaces.com",
    "S3_ENABLED=true",
    "S3_ACCESS_KEY=",
    "S3_SECRET_KEY=",
    "DOCKER_USER=",
    "DOCKER_PASS=",
    "GITHUB_TOKEN="
]

env = [
    "ENGINE=docker",
    "WORKSPACE=dev",
    "VAULT_ADDR=https://vault.codesink.io/",
    "VAULT_TOKEN",
]

workspace = "${env.WORKSPACE}"
engine = "${env.ENGINE}"

vault {
    address = "${env.VAULT_ADDR}"
    token = "${env.VAULT_TOKEN}"
}

cache {
    s3 {
        access_key = "${secrets.S3_ACCESS_KEY}"
        secret_key = "${secrets.S3_SECRET_KEY}"
        endpoint = "${secrets.S3_ENDPOINT}"
        bucket = "${secrets.S3_BUCKET}"
        disabled = "${secrets.S3_ENABLED != "true"}"
    }
}

repository {
    token = "${secrets.GITHUB_TOKEN}"
}

template "default" {
    image = "golang:1.12.0"

    env = {
        "GO111MODULE" = "on"
        "GOCACHE" = "/build/.gocache"
        "GOPATH" = "/build/.go"
        "GOBIN" = "/build/bin/"
    }
}

template "docker" {
    image = "justinbarrick/kaniko:latest"

    env = {
        "DOCKER_USER" = "${secrets.DOCKER_USER}",
        "DOCKER_PASS" = "${secrets.DOCKER_PASS}",
    }

    engine = "kubernetes"
}

job "go-bindata" {
    inputs = ["go.mod", "go.sum"]
    outputs = ["./bin/go-bindata"]
    shell = "go get -u github.com/jteeuwen/go-bindata/..."
}

job "generate" {
    deps = ["go-bindata"]

    shell = "go generate ./pkg/reporting/"

    inputs = [
        "./pkg/reporting/reporting.go", "./pkg/reporting/templates/*",
        "./bin/go-bindata"
    ]
    outputs = ["./pkg/reporting/bindata.go"]

    env = {
        "PATH" = "/build/bin:/usr/local/go/bin"
    }
}

job "test" {
    deps = ["generate"]
    inputs = ["./cmd/", "./pkg/", "go.mod", "go.sum"]
    shell = "go test ./cmd/... ./pkg/..."
}

job "build" {
    deps = ["test"]

    inputs = ["./cmd/*/*.go", "./pkg/**/*.go", "go.mod", "go.sum"]
    outputs = ["./docker/hone"]

    shell = "go build -v -o ./docker/hone ./cmd/hone"
}

job "build-mac" {
    deps = ["test"]

    env = {
        "GOCACHE" = "/build/.gocachedarwin"
        "GOOS" = "darwin"
    }

    inputs = ["./cmd/*/*.go", "./pkg/**/*.go", "go.mod", "go.sum"]
    outputs = ["hone_darwin"]

    shell = "go build -v -o ./hone_darwin ./cmd/hone"
}

job "build-kaniko-shim" {
    inputs = ["./cmd/*/*.go", "./pkg/**/*.go", "go.mod", "go.sum"]
    outputs = ["docker/kaniko"]

    shell = "go build -v -o ./docker/kaniko ./cmd/kaniko"
}

job "build-kaniko-shim-image" {
    template = "docker"

    deps = ["build-kaniko-shim"]
    inputs = ["docker/Dockerfile.kaniko", "docker/kaniko"]

    shell = <<EOF
kaniko --dockerfile=docker/Dockerfile.kaniko --context=/build/docker/ \
    --destination=${secrets.DOCKER_USER}/kaniko:latest
EOF
}

job "build-cache-shim" {
    env = {
        "CGO_ENABLED" = "0"
    }

    inputs = ["./cmd/*/*.go", "./pkg/**/*.go", "go.mod", "go.sum"]
    outputs = ["./docker/cache-shim"]

    shell = "go build -ldflags '-w -extldflags -static' -o ./docker/cache-shim ./cmd/cache-shim"
}

job "build-cache-shim-image" {
    template = "docker"

    deps = ["build-cache-shim"]
    inputs = ["docker/Dockerfile.cache-shim", "docker/cache-shim"]

    shell = <<EOF
kaniko --dockerfile=docker/Dockerfile.cache-shim --context=/build/docker/ \
    --destination=${secrets.DOCKER_USER}/cache-shim:latest
EOF
}

job "hone-image" {
    template = "docker"

    deps = ["build"]
    inputs = ["docker/Dockerfile.hone", "docker/hone"]

    shell = <<EOF
kaniko --dockerfile=docker/Dockerfile.hone --context=/build/docker/ \
    --destination=${secrets.DOCKER_USER}/hone:latest
EOF
}

job "images" {
    deps = ["build-cache-shim-image", "build-kaniko-shim-image", "hone-image"]
    image = "alpine"
    shell = "echo images"
}

job "binaries" {
    deps = ["build-cache-shim", "build-kaniko-shim", "build", "build-mac"]
    image = "alpine"
    shell = "echo binaries"
}

job "all" {
    deps = ["images", "binaries"]
    shell = "echo all"
    engine = "local"
}
