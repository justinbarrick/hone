secrets = [
    "S3_ACCESS_KEY",
    "S3_SECRET_KEY",
    "DOCKER_USER",
    "DOCKER_PASS",
    "GITHUB_TOKEN"
]

env = [
    "ENGINE=docker",
    "S3_BUCKET=codesink-cache",
    "S3_ENDPOINT=sfo2.digitaloceanspaces.com",
    "S3_ENABLED=false",
    "S3_ACCESS_KEY",
    "S3_SECRET_KEY",
    "DOCKER_USER",
    "DOCKER_PASS",
    "WORKSPACE=dev",
    "VAULT_ADDR=https://vault.codesink.net/",
    "VAULT_TOKEN",
    "GITHUB_TOKEN"
]

workspace = "${environ.WORKSPACE}"
engine = "${environ.ENGINE}"

vault {
    address = "${environ.VAULT_ADDR}"
    token = "${environ.VAULT_TOKEN}"
}

kubernetes {
    namespace = "default"
}

cache {
    s3 {
        access_key = "${environ.S3_ACCESS_KEY}"
        secret_key = "${environ.S3_SECRET_KEY}"
        endpoint = "${environ.S3_ENDPOINT}"
        bucket = "${environ.S3_BUCKET}"
        disabled = "${environ.S3_ENABLED != "true"}"
    }
}

report {
    token = "${environ.GITHUB_TOKEN}"
}

template "default" {
    image = "golang:1.11.2"

    env = {
        "GO111MODULE" = "on"
        "GOCACHE" = "/build/.gocache"
        "GOPATH" = "/build/.go"
    }
}

template "docker" {
    image = "justinbarrick/kaniko:latest"

    env = {
        "DOCKER_USER" = "${environ.DOCKER_USER}",
        "DOCKER_PASS" = "${environ.DOCKER_PASS}",
    }

    engine = "kubernetes"
}

job "test" {
    inputs = ["./cmd/", "./pkg/", "go.mod", "go.sum"]
    shell = "go test ./cmd/... ./pkg/..."
}

job "build" {
    deps = ["test"]

    inputs = ["./cmd/*/*.go", "./pkg/**/*.go", "go.mod", "go.sum"]
    output = "hone"

    shell = "go build -v -o ./hone ./cmd/hone"
}

job "build-mac" {
    deps = ["test"]

    env = {
        "GOCACHE" = "/build/.gocachedarwin"
        "GOOS" = "darwin"
    }

    inputs = ["./cmd/*/*.go", "./pkg/**/*.go", "go.mod", "go.sum"]
    output = "hone_darwin"

    shell = "go build -v -o ./hone_darwin ./cmd/hone"
}

job "build-kaniko-shim" {
    inputs = ["./cmd/*/*.go", "./pkg/**/*.go", "go.mod", "go.sum"]
    output = "docker/kaniko"

    shell = "go build -v -o ./docker/kaniko ./cmd/kaniko"
}

job "build-kaniko-shim-image" {
    template = "docker"

    deps = ["build-kaniko-shim"]
    inputs = ["docker/Dockerfile.kaniko", "docker/kaniko"]

    shell = <<EOF
kaniko --dockerfile=docker/Dockerfile.kaniko --context=/build/docker/ \
    --destination=${environ.DOCKER_USER}/kaniko:latest
EOF
}

job "build-cache-shim" {
    env = {
        "CGO_ENABLED" = "0"
    }

    inputs = ["./cmd/*/*.go", "./pkg/**/*.go", "go.mod", "go.sum"]
    output = "./docker/cache-shim"

    shell = "go build -ldflags '-w -extldflags -static' -o ./docker/cache-shim ./cmd/cache-shim"
}

job "build-cache-shim-image" {
    template = "docker"

    deps = ["build-cache-shim"]
    inputs = ["docker/Dockerfile.cache-shim", "docker/cache-shim"]

    shell = <<EOF
kaniko --dockerfile=docker/Dockerfile.cache-shim --context=/build/docker/ \
    --destination=${environ.DOCKER_USER}/cache-shim:latest
EOF
}

job "images" {
    deps = ["build-cache-shim-image", "build-kaniko-shim-image"]
    image = "alpine"
    shell = "echo images"
}

job "binaries" {
    deps = ["build-cache-shim", "build-kaniko-shim", "build", "build-mac"]
    image = "alpine"
    shell = "echo binaries"
}

job "all" {
    deps = ["images", "binaries"]
    image = "alpine"
    shell = "echo all"
}
